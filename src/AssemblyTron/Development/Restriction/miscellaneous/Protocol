## TEST VERSION FROM 2/12/2021

from opentrons import protocol.api
import tkinter
import csv

## Meta Data

metadata = {'protocolName': 'RED',
'author':'Mason Kellinger masonkellinger@vt.edu', 'Steven Kenah ksteven18@vt.edu'
 'description': 'Restriction Enzyme Digestion',
 'apiLevel': '2.9' ## FIGURE THIS OUT
}

## Configuration
def get_config(config_file):

    ## read csv file containing enzyme specific Data


    ## create variables for use in protocol
    g= open(csv) ##still need name of csv file.
    print(g)
    ## If statement checks if the user's input of data is correct.
    check= input('Is this the data you want to use? Please enter yes or no')
    if check == 'yes':
        ##Do nothing.  Will continue running code
    if check == 'no':
        sys.exit() # Ends code so you can input new data and restart
    Elif:
        check= input('Incorrect input. Is this the data you want to use?  Please enter yes or no')


## protocol

def run(protocol: protocol_api.RED):

    ## Loading labware
    TempUnit = protocol.load_labware('TempertureUnit','3') ## FIGURE THIS OUT
    tiprack1 = protocol.load_labware("opentrons_96_tiprack_10ul",'1')
    tiprack2 = protocol.load_labware("opentrons_96_tiprack_20ul","2")
    tuberack = protocol.load_labware("opentrons_24_tuberack_nest_2ml_snapcap","4")

    ## Loading tools
    pipette_left = protocol.load_tools('p20_single','left','tip_racks = [tiprack1]')
    pipette_right = protocol.load_tools('p20_single','right','tip_racks = [tiprack2]'')

    ## Operations

    ## get tip -> get x amount of water to fill to 20uL -> dispense into tube
    pipette_left.pick_up_tip(tiprack1['A1'])
    pipette_left.aspirate(parameter,location,rate)
    pipette_left.dispense(parameter,tuberack[A1],1) #create function to deteremine amount needed
    pipette_left.blow_out()
    pipette_left.drop_tip()  ## goes to trash??



    ## get 2uL of 10x buffer -> dispense into tube -> get rid of tip

    pipette_left.pick_up_tip() #should go the next slot
    pipette_left.aspirate(2,location,rate)
    pipette_left.dispense(2,tuberack[A1],1)
    pipette_left.blow_out()
    pipette_left.drop_tip()


    ## get tip -> get y amount of DNA -> dispense into tube -> get rid of tip

    pipette_left.pick_up_tip()
    pipette_left.aspirate(parameter2,location,rate) #create function to determine
    pipette_left.dispense(parameter2,tuberack[A1],1)
    pipette_left.drop_tip()
    ## we don't blow out so we dont aerosolize dna

    ## get tip -> get 1uL Enzyme -> dispense into tube -> get rid of tip

    pipette_left.pick_up_tip()
    pipette_left.aspirate(1,location,rate)
    pipette_left.dispense(1,tuberack[A1],1)
    pipette_left.blow_out()
    pipette_left.drop_tip()

    #mix

    pipette_left.pick_up_tip()#pick up a new tip????
    pipette_left.mix(3,20,tuberack[A1])  #repetetions, max volume uL, location
    #this helps rinse the extra enzyme as well

    #PREP DONE

    RED.comment('Prep is done...')

    ##incubate in tempunit for time @ temp

    #function for incubation
    RED.delay(minutes=time)  #grab from config file
    RED.comment('Incubation has completed')
    ##heat inactivation at @ temp

    ## is the temp programmable?

    ## collect tube
    RED.comment('inactivation @ temp is complete')

def main():
    get_config()
    run()
